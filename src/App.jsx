import React, { useState } from "react";
import TaskItem from "./components/TaskItem";

function App() {
  // √âtat pour la t√¢che en cours de saisie
  const [task, setTask] = useState("");

  // √âtat pour la liste de toutes les t√¢ches
  const [todos, setTodos] = useState([]);

  // Ajouter une nouvelle t√¢che
  const addTask = () => {
    if (task.trim() === "") return; // Si l'entr√©e est vide ou seulement des espaces, on annule

    // Ajout de la nouvelle t√¢che dans la liste (non compl√©t√©e par d√©faut)
    setTodos([...todos, { text: task, completed: false }]);
    setTask(""); // R√©initialisation du champ de saisie
  };

  // Fonction pour marquer une t√¢che comme termin√©e ou non (toggle)
  const toggleComplete = (index) => {
    const newTodos = [...todos]; // Copie de la liste des t√¢ches
    newTodos[index].completed = !newTodos[index].completed; // Inversion de l'√©tat "completed"
    setTodos(newTodos); // Mise √† jour de l'√©tat
  };

  // Fonction pour supprimer une t√¢che de la liste
  const deleteTask = (index) => {
    const newTodos = todos.filter((_, i) => i !== index); // Filtre toutes sauf celle qu'on veut supprimer
    setTodos(newTodos); // Mise √† jour de l'√©tat
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-start p-8 bg-gray-100">
       {/* Titre principal */}
      <h1 className="text-3xl font-bold mb-6 text-gray-800">üìù Ma Todo Liste</h1>

      {/* Formulaire d‚Äôajout de t√¢che */}
      <div className="flex gap-2 mb-4">
        <input
          type="text"
          value={task} // Lier l'input √† l'√©tat `task`
          onChange={(e) => setTask(e.target.value)} // Mise √† jour en temps r√©el
          placeholder="Ajouter une t√¢che"
          className="px-4 py-2 border border-gray-300 rounded-md w-72"
        />
        <button
          onClick={addTask} // Appel de la fonction d‚Äôajout
          className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700"
        >
          Ajouter
        </button>
      </div>

      {/* Liste des t√¢ches */}
      <ul className="w-full max-w-md">
        {todos.length === 0 && (
          <p className="text-gray-500 text-center">Aucune t√¢che pour le moment.</p>
        )}
        {/* Affichage de chaque t√¢che */}
        {todos.map((todo, index) => (
          <TaskItem todo={todo} index={index} deleteTask={deleteTask} toggleComplete={toggleComplete}/>
        ))}
      </ul>
    </div>
  );
}

export default App;
